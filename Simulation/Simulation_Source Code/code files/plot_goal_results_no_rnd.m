function plot_goal_results_no_rnd(X1,YMatrix1, matr_size,xu_lim, yu_lim,yl_lim, c,b)
%CREATEFIGURE(X1, YMATRIX1)
%  X1:  vector of x data
%  YMATRIX1:  matrix of y data
% ceil((xu_lim-5)/3)
for i=1:5
YMatrix1(ceil((xu_lim-5)/3)+i,:)=YMatrix1(ceil((xu_lim-5)/3),:);
 X1(ceil((xu_lim-5)/3)+i)=X1(ceil((xu_lim-5)/3))+3;
end
%  Auto-generated by MATLAB on 06-Jan-2016 10:17:27
saturierung=[15 94 231 441];%für Levels of Complexities
time_case={'early' , 'middle' , 'late' , 'constant'};
a=c;
% if a==3
%     figure_name=strcat({'Efficiency-Goal-'},num2str(a+1),{'Size_'}, matr_size,{' '},{'-'},{' '},{'Phase'}); %Ä
% %     figure_name=strcat({'Efficiency-Goal-'},num2str(a+1),{'Size_'}, matr_size,{' '},{'-'},{' '},{'Phase'},{' '},{'-'},{' '},{'no rnd'}); %Ä
%     fig_title=strcat({'Efficiency: Goal'},{' '},num2str(a+1),{' '},{'-'},{' '},num2str(b+1),{'x'},num2str(b+1));
% 
% else
    
figure_name=strcat({'Effectivity-Goal-'},num2str(a+1),{'Size_'}, matr_size,{' '},{'-'},{' '},{'Phase - no rnd'});
% figure_name=strcat({'Effectivity-Goal-'},num2str(a+1),{'Size_'}, matr_size,{' '},{'-'},{' '},{'Phase'},{' '},{'-'},{' '},{'no rnd'});%Ä

fig_title=strcat({'Effectivity: Goal'},{' '},num2str(a+1),{' '},{'-'},{' '},num2str(b+1),{'x'},num2str(b+1), {' - w/o Random'});
% end
% Create figure; size needs to be revised!
figure1 = figure('Name',figure_name{1});

% Create axes
axes1 = axes('Parent',figure1, 'xlim',[5 xu_lim(1)+3*i-1], 'ylim',[yl_lim(1) yu_lim(1)]);
%% Uncomment the following line to preserve the Y-limits of the axes
% ylim(axes1,[1 yu_lim(1)]);
% xlim([1 xu_lim(1)]);
box(axes1,'on');
hold(axes1,'on');
title(fig_title);
% Create ylabel
switch a
    case 1
        goal='Remaining Alternatives';
    case 2
        goal='Payoff';
    case 3
        goal='Number of Consumed EIPs';
end
ylabel(goal);
% Create xlabel
xlabel('Time Limit [EIP]');

% Create multiple lines using matrix input to plot
plot1 = plot(X1(1:ceil((xu_lim-5)/3)+i,:),YMatrix1(1:ceil((xu_lim-5)/3)+i,:),'Parent',axes1);
% set(plot1(1),'DisplayName','Altruist', 'Color',[1,1,0]);%yellow
% set(plot1(2),'DisplayName','Random', 'Color',[51/255,51/255,0]);%brown/olive
% set(plot1(3),'DisplayName','Optimist', 'Color',[0,1,0]);%green
% set(plot1(4),'DisplayName','Pessimist', 'Color',[1,0,0]);%red
% set(plot1(5),'DisplayName','Naiive', 'Color',[51/255,1,1]);%türkis
% set(plot1(6),'DisplayName','L2', 'Color',[1,51/255,0]);%orange
% set(plot1(7),'DisplayName','D1', 'Color',[1,102/255,102/255]);%rosa
% set(plot1(8),'DisplayName','D2', 'Color',[102/255,0,102/255]);%lila
% set(plot1(9),'DisplayName','Equilibrium', 'Color',[0,0,1]);%blau
set(plot1(1),'DisplayName','Altruist', 'Color',[0 0 0]+0.8);%shade of grey
set(plot1(2),'DisplayName','Random', 'Color',[0 0 0]+0.7);%shade of grey
set(plot1(3),'DisplayName','Optimist', 'Color',[0 0 0]+0.6);%shade of grey
set(plot1(4),'DisplayName','Pessimist', 'Color',[0 0 0]+0.5);%shade of grey
set(plot1(5),'DisplayName','Naiive', 'Color',[0 0 0]+0.4);%shade of grey
set(plot1(6),'DisplayName','L2', 'Color',[0 0 0]+0.3);%shade of grey
set(plot1(7),'DisplayName','D1', 'Color',[0 0 0]+0.2);%shade of grey
set(plot1(8),'DisplayName','D2', 'Color',[0 0 0]+0.1);%shade of grey
set(plot1(9),'DisplayName','Equilibrium', 'Color',[0,0,0]);%black

pos_vec={'N','N','NE','SE','S','NW','NW','SW','SW'};
lab_vec={'Al','Ra','Op','Pe','Na','L2','D1','D2','Eq'};
buf_vec=[0 0 0.1 0.1 0 0 0 0 0];
[~,~,ic] = unique(YMatrix1(ceil((xu_lim-5)/3),:));

for g=1:max(ic)
    lab=find(ic==g);
if size(ic(ic==g),1)>1
    
    lab_val={lab_vec{lab(1)}};
    for gg=2:size(ic(ic==g),1)
    lab_val=strcat(lab_val,'/',lab_vec{lab(gg)});
    end
labelpoints(ceil(xu_lim+3*i/2), YMatrix1(ceil((xu_lim-5)/3),lab(1)), lab_val{1},'SW');
else
    labelpoints(ceil(xu_lim+3*i/2), YMatrix1(ceil((xu_lim-5)/3),lab(1)), lab_vec{lab(1)},'SW');%
end
end
% Create legend
% pause(0.5);
% legend1 = legend(axes1,'show');
% set(legend1,'Location','eastoutside','FontSize',9);
% caxis([1,9]);

halbe_breite=((saturierung(b)-1)*3+5)*1/6;
for l=1:3

        x_line=[((saturierung(b)-1)*3+5)*l/3, ((saturierung(b)-1)*3+5)*l/3];
        y_line=[yl_lim(1),yu_lim(1)];

        y_l=line(x_line,y_line,'lineWidth', 1.5, 'lineStyle','--');
        y_l.Color=[0,0,0,0.5];
       labelpoints (x_line(1)-halbe_breite, y_line(1), time_case{l}, 'C', 0.2, 1, 'FontSize', 12, 'Color', [0.6 0.6 0.6]);
end
labelpoints (x_line(1)+halbe_breite, y_line(1), time_case{l+1}, 'C', 0.2, 1, 'FontSize', 12, 'Color', [0.6 0.6 0.6]);

savefig(figure_name{1});
%saveas(figure1,figure_name{1}, 'jpg');
saveas(figure1,figure_name{1}, 'meta');
close(figure1);

